#geom_abline(aes(intercept=0, slope=1), color="black") +
annotate(geom="text", x=0.085, y=0.15, label=paste("R = ", signif(cor.test(dm$ns_rodent, dm$Rjordan, method='pearson')$estimate, digits=3), "\n p = ", signif(cor.test(dm$ns_rodent, dm$Rjordan, method='pearson')$p.value, digits=1)), color="black", size=6) +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
#geom_pointrange(aes(x=Pnoratio, xmin=Pnoratio-Perror, xmax=Pnoratio+Perror)) +
geom_point(size=3) +
theme(axis.title=element_text(size=16, face="bold"), axis.text=element_text(size=14), panel.background = element_rect(fill = "white", colour = "grey50"), panel.grid.major = element_line(colour = "grey90"), panel.grid.minor = element_blank(), panel.border = element_rect(color = "grey50", fill=NA), plot.margin = unit(c(0.1, 0.1, 0.5, 0.5), "cm"), aspect.ratio = 1)
Fig2d
Fig2e
Fig2f
Fig2e <- ggplot(dm, aes(x=ns_primate, y=Pjordan)) +
labs( x = "Primate nonstationary frequency", y = "Primate flux (Jordan et al.)") +
scale_x_continuous(limits=c(0.01,0.11), breaks=c(0.02, 0.06, 0.1)) +
scale_y_continuous(limits=c(-0.4,0.45), breaks=c(-0.4, -0.2, 0, 0.2, 0.4)) +
#geom_abline(aes(intercept=0, slope=1), color="black") +
annotate(geom="text", x=0.085, y=-0.3, label=paste("R = ", signif(cor.test(dm$ns_primate, dm$Pjordan, method='pearson')$estimate, digits=3), "\n p = ", signif(cor.test(dm$ns_primate, dm$Pjordan, method='pearson')$p.value, digits=1)), color="black", size=6) +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
#geom_pointrange(aes(x=Pnoratio, xmin=Pnoratio-Perror, xmax=Pnoratio+Perror)) +
geom_point(size=3) +
theme(axis.title=element_text(size=16, face="bold"), axis.text=element_text(size=14), panel.background = element_rect(fill = "white", colour = "grey50"), panel.grid.major = element_line(colour = "grey90"), panel.grid.minor = element_blank(), panel.border = element_rect(color = "grey50", fill=NA), plot.margin = unit(c(0.1, 0.1, 0.5, 0.5), "cm"), aspect.ratio = 1)
Fig2e
Fig2f <- ggplot(dm, aes(x=ns_rodent, y=Rjordan)) +
labs( x = "Rodent nonstationary frequency", y = "Rodent flux (Jordan et al.)") +
scale_x_continuous(limits=c(0.01,0.11), breaks=c(0.02, 0.06, 0.1)) +
scale_y_continuous(limits=c(-0.4,0.45), breaks=c(-0.4, -0.2, 0, 0.2, 0.4)) +
#geom_abline(aes(intercept=0, slope=1), color="black") +
annotate(geom="text", x=0.085, y=0.15, label=paste("R = ", signif(cor.test(dm$ns_rodent, dm$Rjordan, method='pearson')$estimate, digits=3), "\n p = ", signif(cor.test(dm$ns_rodent, dm$Rjordan, method='pearson')$p.value, digits=1)), color="black", size=6) +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
#geom_pointrange(aes(x=Pnoratio, xmin=Pnoratio-Perror, xmax=Pnoratio+Perror)) +
geom_point(size=3) +
theme(axis.title=element_text(size=16, face="bold"), axis.text=element_text(size=14), panel.background = element_rect(fill = "white", colour = "grey50"), panel.grid.major = element_line(colour = "grey90"), panel.grid.minor = element_blank(), panel.border = element_rect(color = "grey50", fill=NA), plot.margin = unit(c(0.1, 0.1, 0.5, 0.5), "cm"), aspect.ratio = 1)
Fig2d
Fig2e
Fig2f
Fig2e <- ggplot(dm, aes(x=ns_primate, y=Pjordan)) +
labs( x = "Primate nonstationary frequency", y = "Primate flux (Jordan et al.)") +
scale_x_continuous(limits=c(0.01,0.11), breaks=c(0.02, 0.06, 0.1)) +
scale_y_continuous(limits=c(-0.4,0.45), breaks=c(-0.4, -0.2, 0, 0.2, 0.4)) +
#geom_abline(aes(intercept=0, slope=1), color="black") +
annotate(geom="text", x=0.085, y=0.3, label=paste("R = ", signif(cor.test(dm$ns_primate, dm$Pjordan, method='pearson')$estimate, digits=3), "\n p = ", signif(cor.test(dm$ns_primate, dm$Pjordan, method='pearson')$p.value, digits=1)), color="black", size=6) +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
#geom_pointrange(aes(x=Pnoratio, xmin=Pnoratio-Perror, xmax=Pnoratio+Perror)) +
geom_point(size=3) +
theme(axis.title=element_text(size=16, face="bold"), axis.text=element_text(size=14), panel.background = element_rect(fill = "white", colour = "grey50"), panel.grid.major = element_line(colour = "grey90"), panel.grid.minor = element_blank(), panel.border = element_rect(color = "grey50", fill=NA), plot.margin = unit(c(0.1, 0.1, 0.5, 0.5), "cm"), aspect.ratio = 1)
Fig2f <- ggplot(dm, aes(x=ns_rodent, y=Rjordan)) +
labs( x = "Rodent nonstationary frequency", y = "Rodent flux (Jordan et al.)") +
scale_x_continuous(limits=c(0.01,0.11), breaks=c(0.02, 0.06, 0.1)) +
scale_y_continuous(limits=c(-0.4,0.45), breaks=c(-0.4, -0.2, 0, 0.2, 0.4)) +
#geom_abline(aes(intercept=0, slope=1), color="black") +
annotate(geom="text", x=0.085, y=0.3, label=paste("R = ", signif(cor.test(dm$ns_rodent, dm$Rjordan, method='pearson')$estimate, digits=3), "\n p = ", signif(cor.test(dm$ns_rodent, dm$Rjordan, method='pearson')$p.value, digits=1)), color="black", size=6) +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
#geom_pointrange(aes(x=Pnoratio, xmin=Pnoratio-Perror, xmax=Pnoratio+Perror)) +
geom_point(size=3) +
theme(axis.title=element_text(size=16, face="bold"), axis.text=element_text(size=14), panel.background = element_rect(fill = "white", colour = "grey50"), panel.grid.major = element_line(colour = "grey90"), panel.grid.minor = element_blank(), panel.border = element_rect(color = "grey50", fill=NA), plot.margin = unit(c(0.1, 0.1, 0.5, 0.5), "cm"), aspect.ratio = 1)
Fig2d
Fig2e
Fig2f
Fig2d <- ggplot(dm, aes(x=ns_primate, y=ns_rodent))+
labs( x = "Primate nonstationary frequency", y = "Rodent nonstationary frequency") +
coord_equal() +
geom_abline(data=subset(reg_ns, Method=="MA"), aes(intercept=Intercept, slope=Slope), color="red", size=1.5) +
annotate(geom="text", x=0.085, y=0.025, label=paste("R = ", signif(cor.test(dm$ns_primate, dm$ns_rodent, method='pearson')$estimate, digits=3), "\n p = ", signif(cor.test(dm$ns_primate, dm$ns_rodent, method='pearson')$p.value, digits=1)), color="black", size=6) +
#geom_pointrange(aes(xmin=Pnoratio-Perror, xmax=Pnoratio+Perror)) +
#geom_pointrange(aes(ymin=Rnoratio-Rerror, ymax=Rnoratio+Rerror)) +
geom_point(size=3) +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
mytheme
Fig2d
Fig2e
Fig2f
knitr::opts_chunk$set(echo = TRUE)
fitII <- lmodel2(ns_rodent ~ ns_primate, data=dNS, range.y="interval", range.x="interval", nperm=99)
#read in NS values
dNS <- read.delim(file = "NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
fitII <- lmodel2(ns_rodent ~ ns_primate, data=dNS, range.y="interval", range.x="interval", nperm=99)
reg <- fitII$regression.results
slope <- subset(reg, Method=="MA")$Slope
intercept <- subset(reg, Method=="MA")$Intercept
residuals_from_model_2 <- function(x,y,m,b){
result<-((b + m*x - y))/sqrt(m**2+1)
print(result*-1)
#calculate SHARED COMPONENT: projection of fluxes in P-R space along the model II regression
projections_from_model_2 <- function(x,y,m,b){
result<-sqrt(((x+m*y -m*b)/(m*m+1))**2+((m)*(x+m*y -m*b)/(m*m+1)+b)**2)
print(result)
}
residuals_from_model_2 <- function(x,y,m,b){
result<-((b + m*x - y))/sqrt(m**2+1)
print(result*-1)
#calculate SHARED COMPONENT: projection of fluxes in P-R space along the model II regression
projections_from_model_2 <- function(x,y,m,b){
result<-sqrt(((x+m*y -m*b)/(m*m+1))**2+((m)*(x+m*y -m*b)/(m*m+1)+b)**2)
print(result)
}
dNS$residuals_m2<-residuals_from_model_2(dNS$ns_primate, dNS$ns_rodent, slope, intercept)
dNS$projections_m2<- projections_from_model_2(dNS$ns_primate, dNS$ns_rodent, slope, intercept)
#Check that calculations were correct
Dang<-ggplot(dNS, aes(x=projections_m2, y=residuals_m2))+
labs( x = "Shared Flux", y = "Species Flux")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
)
#Check that calculations were correct
Dang<-ggplot(dNS, aes(x=projections_m2, y=residuals_m2))+
labs( x = "Shared Flux", y = "Species Flux")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
dNS$residuals_m2<-residuals_from_model_2(dNS$ns_primate, dNS$ns_rodent, slope, intercept)
#calculate SPECIES COMPONENT: residuals between fluxes in P-R space and the model II regression
residuals_from_model_2 <- function(x,y,m,b){
print(result*-1)
#calculate SPECIES COMPONENT: residuals between fluxes in P-R space and the model II regression
residuals_from_model_2 <- function(x,y,m,b){
result<-((b + m*x - y))/sqrt(m**2+1)
print(result*-1)
}
#calculate SHARED COMPONENT: projection of fluxes in P-R space along the model II regression
projections_from_model_2 <- function(x,y,m,b){
result<-sqrt(((x+m*y -m*b)/(m*m+1))**2+((m)*(x+m*y -m*b)/(m*m+1)+b)**2)
print(result)
}
)
#calculate SPECIES COMPONENT: residuals between fluxes in P-R space and the model II regression
residuals_from_model_2 <- function(x,y,m,b){
result<-((b + m*x - y))/sqrt(m**2+1)
print(result*-1)
}
#calculate SHARED COMPONENT: projection of fluxes in P-R space along the model II regression
projections_from_model_2 <- function(x,y,m,b){
result<-sqrt(((x+m*y -m*b)/(m*m+1))**2+((m)*(x+m*y -m*b)/(m*m+1)+b)**2)
print(result)
}
dNS$residuals_m2<-residuals_from_model_2(dNS$ns_primate, dNS$ns_rodent, slope, intercept)
dNS$projections_m2<- projections_from_model_2(dNS$ns_primate, dNS$ns_rodent, slope, intercept)
knitr::opts_chunk$set(echo = TRUE)
dNS
#Check that calculations were correct
Dang<-ggplot(DD, aes(x=projections_m2, y=residuals_m2))+
labs( x = "Shared Freq", y = "Species Freq")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
#Check that calculations were correct
Dang<-ggplot(dNS, aes(x=projections_m2, y=residuals_m2))+
labs( x = "Shared Freq", y = "Species Freq")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
#read in NS values
DD <- read.delim(file = "NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
#Set your working directory
setwd("C:/Users/hanon/Documents/Github/aa_flux/Flux/")
#read in NS values
DD <- read.delim(file = "NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
fitII <- lmodel2(ns_rodent ~ ns_primate, data=DD, range.y="interval", range.x="interval", nperm=99)
reg <- fitII$regression.results
slope <- subset(reg, Method=="MA")$Slope
intercept <- subset(reg, Method=="MA")$Intercept
#calculate SPECIES COMPONENT: residuals between fluxes in P-R space and the model II regression
residuals_from_model_2 <- function(x,y,m,b){
result<-((b + m*x - y))/sqrt(m**2+1)
print(result*-1)
}
#calculate SHARED COMPONENT: projection of fluxes in P-R space along the model II regression
projections_from_model_2 <- function(x,y,m,b){
result<-sqrt(((x+m*y -m*b)/(m*m+1))**2+((m)*(x+m*y -m*b)/(m*m+1)+b)**2)
print(result)
}
DD$residuals_m2<-residuals_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD$projections_m2<- projections_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD
#Check that calculations were correct
Dang<-ggplot(DD, aes(x=projections_m2, y=residuals_m2))+
labs( x = "Shared Freq", y = "Species Freq")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
DD
write.csv(DD[,c(1,6)], file="NS_shared.csv", quote=FALSE, row.names=FALSE)
write.csv(DD[,c(1,5)], file="NS_species.csv", quote=FALSE, row.names=FALSE)
write.csv(DD, file="all_NS.csv", quote=FALSE, row.names=FALSE)
ns <- read.delim(file = "../Flux/NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
dm <- cbind(dd, ns)
dd <- cbind(d, metrics2[,2:118]) %>% mutate(fc_rodent = ns_rodent-ns_root, fc_primate = ns_primate-ns_root)
dm <- cbind(dd, ns)
names(dm)
ns <- read.delim(file = "../Flux/all_NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
dd <- cbind(d, metrics2[,2:118]) %>% mutate(fc_rodent = ns_rodent-ns_root, fc_primate = ns_primate-ns_root)
dm <- cbind(dd, ns)
names(dm)
?cbind
names(ns)
DD$ns_residuals_m2<-residuals_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD$ns_projections_m2<- projections_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD
#Check that calculations were correct
Dang<-ggplot(DD, aes(x=projections_m2, y=residuals_m2))+
labs( x = "Shared Freq", y = "Species Freq")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
write.csv(DD[,c(1,6)], file="NS_shared.csv", quote=FALSE, row.names=FALSE)
write.csv(DD[,c(1,5)], file="NS_species.csv", quote=FALSE, row.names=FALSE)
write.csv(DD, file="all_NS.csv", quote=FALSE, row.names=FALSE)
ns <- read.delim(file = "../Flux/all_NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
dd <- cbind(d, metrics2[,2:118]) %>% mutate(fc_rodent = ns_rodent-ns_root, fc_primate = ns_primate-ns_root)
dm <- cbind(dd, ns)
names(dm)
names(ns)
pkgs_needed = c("dplyr", "ade4", "ggplot2", "ggpubr", "lmodel2")
letsinstall = setdiff(pkgs_needed, installed.packages())
if (length(letsinstall) > 0) {
BiocManager::install(setdiff(pkgs_needed, installed.packages()))
}
#pkgs_needed = c("Rpdb", "rgl", "Rcpp", "tidyverse", "Biostrings", "RColorBrewer", "magrittr", "plyr", "reshape2", "ade4", "ggplot2", "rowr", "ggpubr", "backports", "lmodel2")
library("dplyr")
library("ade4")
library("ggplot2")
library("ggpubr")
library("lmodel2")
#library("Rpdb")
#library("Rcpp")
#library("rgl")
#library("rowr")
#library("backports")
#library("curl")
remove.packages(c("ggplot2", "data.table"))
install.packages('Rcpp', dependencies = TRUE)
install.packages('ggplot2', dependencies = TRUE)
install.packages('data.table', dependencies = TRUE)
#Set your working directory
setwd("C:/Users/hanon/Documents/Github/aa_flux/Flux/")
install.packages("ggplot2", dependencies = TRUE)
install.packages("Rcpp", dependencies = TRUE)
#read in NS values
DD <- read.delim(file = "NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
fitII <- lmodel2(ns_rodent ~ ns_primate, data=DD, range.y="interval", range.x="interval", nperm=99)
reg <- fitII$regression.results
slope <- subset(reg, Method=="MA")$Slope
intercept <- subset(reg, Method=="MA")$Intercept
#calculate SPECIES COMPONENT: residuals between fluxes in P-R space and the model II regression
residuals_from_model_2 <- function(x,y,m,b){
result<-((b + m*x - y))/sqrt(m**2+1)
print(result*-1)
}
#calculate SHARED COMPONENT: projection of fluxes in P-R space along the model II regression
projections_from_model_2 <- function(x,y,m,b){
result<-sqrt(((x+m*y -m*b)/(m*m+1))**2+((m)*(x+m*y -m*b)/(m*m+1)+b)**2)
print(result)
}
DD$ns_residuals_m2<-residuals_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD$ns_projections_m2<- projections_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD
#Check that calculations were correct
Dang<-ggplot(DD, aes(x=projections_m2, y=residuals_m2))+
labs( x = "Shared Freq", y = "Species Freq")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
#Set your working directory
setwd("C:/Users/hanon/Documents/Github/aa_flux/Flux/")
#read in NS values
DD <- read.delim(file = "NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
fitII <- lmodel2(ns_rodent ~ ns_primate, data=DD, range.y="interval", range.x="interval", nperm=99)
reg <- fitII$regression.results
slope <- subset(reg, Method=="MA")$Slope
intercept <- subset(reg, Method=="MA")$Intercept
#calculate SPECIES COMPONENT: residuals between fluxes in P-R space and the model II regression
residuals_from_model_2 <- function(x,y,m,b){
result<-((b + m*x - y))/sqrt(m**2+1)
print(result*-1)
}
#calculate SHARED COMPONENT: projection of fluxes in P-R space along the model II regression
projections_from_model_2 <- function(x,y,m,b){
result<-sqrt(((x+m*y -m*b)/(m*m+1))**2+((m)*(x+m*y -m*b)/(m*m+1)+b)**2)
print(result)
}
DD$ns_residuals_m2<-residuals_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD$ns_projections_m2<- projections_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD
#Check that calculations were correct
Dang<-ggplot(DD, aes(x=projections_m2, y=residuals_m2))+
labs( x = "Shared Freq", y = "Species Freq")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
#Check that calculations were correct
Dang<-ggplot(DD, aes(x=ns_projections_m2, y=ns_residuals_m2))+
labs( x = "Shared Freq", y = "Species Freq")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
write.csv(DD[,c(1,6)], file="NS_shared.csv", quote=FALSE, row.names=FALSE)
write.csv(DD[,c(1,5)], file="NS_species.csv", quote=FALSE, row.names=FALSE)
write.csv(DD, file="all_NS.csv", quote=FALSE, row.names=FALSE)
#Set your working directory
setwd("C:/Users/hanon/Documents/GitHub/aa_flux/Figures/")
#read in amino acid metrics
metrics <- read.delim(file = "Short_amino_acid_properties_Oct23.csv", header=TRUE, stringsAsFactors=FALSE, sep=",") #%>% rename(yps="SlopeAnimal..1496", ops="SlopeAnimal..2101")
metrics
#calculate residuals of fitness effects after accounting for mol volume and disorder propensity
model_resid_LKmarch22 <- lm(metrics$mean_LKmarch22~metrics$Disorder_Propensity + metrics$VolumeA3, weights=(y=(1/(metrics$stderr_LKmarch22))^(2)))
resid_LKmarch22 <- model_resid_LKmarch22$residuals
metrics2 <- cbind(metrics, resid_LKmarch22)
#read in flux data
d <- read.delim(file = "../Flux/all_fluxes.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
ns <- read.delim(file = "../Flux/all_NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
dd <- cbind(d, metrics2[,2:118]) %>% mutate(fc_rodent = ns_rodent-ns_root, fc_primate = ns_primate-ns_root)
dm <- cbind(dd, ns)
names(dm)
#settings that affect all or most Figs
#theme
mytheme <- theme(axis.title=element_text(size=16, face="bold"), axis.text=element_text(size=14), panel.background = element_rect(fill = "white", colour = "grey50"), panel.grid.major = element_line(colour = "grey90"), panel.grid.minor = element_blank(), panel.border = element_rect(color = "grey50", fill=NA), plot.margin = unit(c(0.15, 0.3, 0.1, 0.1), "cm"))
#functions for positioning annotations dynamically with axis range
pos_scale <- 0.05
xpos_hi <- function(x){
xpos = max(x) - pos_scale*diff(range(x))
return(xpos)}
xpos_lo <- function(x){
xpos = min(x) + pos_scale*diff(range(x))
return(xpos)}
ypos_hi <- function(y){
ypos = max(y) - pos_scale*diff(range(y))
return(xpos)}
ypos_lo <- function(y){
ypos = min(y) + pos_scale*diff(range(y))
return(ypos)}
cor.test(dm$projections_m2, dm$ns_projections_m2, method='pearson')
cor.test(dm$residuals_m2, dm$ns_residuals_m2, method='pearson')
cor.test(dm$kldCAISslope_Pfam, dm$ns_residuals_m2, method='pearson')
cor.test(dm$kldCAISslope_Proteome, dm$ns_residuals_m2, method='pearson')
pfprs <- cor.test(dm$kldCAISslope_Pfam,dm$kldCAISslope_Proteome, method='spearman') #R=0.962, p=6e-06
pfprp <- cor.test(dm$kldCAISslope_Pfam,dm$kldCAISslope_Proteome, method='pearson') #R=0.960, p=2e-10
pfprs
pfprp
FigS2<-ggplot(dm, aes(x=kldCAISslope_Pfam, y=kldCAISslope_Proteome)) +
labs( x = "Preference in \nmore adapted species \n(pfams only)", y = "Preference in \nmore adapted species \n(whole proteome)") +
scale_x_continuous(limits=c(-0.2,0.2), breaks=c(-0.2, -0.1, 0, 0.1, 0.2)) +
scale_y_continuous(limits=c(-0.2,0.2), breaks=c(-0.2, -0.1, 0, 0.1, 0.2)) +
coord_equal() +
annotate(geom="text", x=0.12, y=-0.15, label=paste("R = ", signif(pfprp$estimate, digits=3), "\n p = ", signif(pfprp$p.value, digits=1)), color="black", size=6) +
geom_pointrange(aes(xmin=CAISslopeNEWPfam_Estimates-CAISslopeNEWPfam_Std.Error, xmax=CAISslopeNEWPfam_Estimates+CAISslopeNEWPfam_Std.Error)) +
geom_pointrange(aes(ymin=CAISslopeNEWproteome_Estimates-CAISslopeNEWproteome_Std.Error, ymax=CAISslopeNEWproteome_Estimates+CAISslopeNEWproteome_Std.Error)) +
geom_point(size=3) +
#geom_abline(aes(intercept=0, slope=1), color="black") +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
mytheme
FigS2
FigS2<-ggplot(dm, aes(x=kldCAISslope_Pfam, y=kldCAISslope_Proteome)) +
labs( x = "Preference in \nmore adapted species \n(pfams only)", y = "Preference in \nmore adapted species \n(whole proteome)") +
scale_x_continuous(limits=c(-0.2,0.2), breaks=c(-0.2, -0.1, 0, 0.1, 0.2)) +
scale_y_continuous(limits=c(-0.2,0.2), breaks=c(-0.2, -0.1, 0, 0.1, 0.2)) +
coord_equal() +
annotate(geom="text", x=0.12, y=-0.15, label=paste("R = ", signif(pfprp$estimate, digits=3), "\n p = ", signif(pfprp$p.value, digits=1)), color="black", size=6) +
geom_pointrange(aes(xmin=kldCAISslope_Pfam-kldCAISslope_Pfam_Std.Error, xmax=kldCAISslope_Pfam+kldCAISslope_Pfam_Std.Error)) +
geom_pointrange(aes(ymin=kldCAISslope_Proteome-kldCAISslope_Proteome_Std.Error, ymax=kldCAISslope_Proteome+kldCAISslope_Proteome_Std.Error)) +
geom_point(size=3) +
#geom_abline(aes(intercept=0, slope=1), color="black") +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
mytheme
FigS2
tail(names(dm))
names(ns)
dm <- cbind(dd, ns[,5:6])
names(dm)
dm$Rod_minus_Root
dm$fc_rodent
FigS2<-ggplot(dm, aes(x=kldCAISslope_Pfam, y=kldCAISslope_Proteome)) +
labs( x = "Preference in \nmore adapted species \n(pfams only)", y = "Preference in \nmore adapted species \n(whole proteome)") +
scale_x_continuous(limits=c(-0.2,0.2), breaks=c(-0.2, -0.1, 0, 0.1, 0.2)) +
scale_y_continuous(limits=c(-0.2,0.2), breaks=c(-0.2, -0.1, 0, 0.1, 0.2)) +
coord_equal() +
annotate(geom="text", x=0.12, y=-0.15, label=paste("R = ", signif(pfprp$estimate, digits=3), "\n p = ", signif(pfprp$p.value, digits=1)), color="black", size=6) +
geom_pointrange(aes(xmin=kldCAISslope_Pfam-kldCAISslope_Pfam_Std.Error, xmax=kldCAISslope_Pfam+kldCAISslope_Pfam_Std.Error)) +
geom_pointrange(aes(ymin=kldCAISslope_Proteome-kldCAISslope_Proteome_Std.Error, ymax=kldCAISslope_Proteome+kldCAISslope_Proteome_Std.Error)) +
geom_point(size=3) +
#geom_abline(aes(intercept=0, slope=1), color="black") +
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6) +
mytheme
FigS2
myggsave_m(FigS2)
#Set your own paths!
myggsave_sq <- function(x){
ggsave(plot=x, filename=paste0(deparse(substitute(x)), ".svg"), path="C:/Users/hanon/Documents/Github/aa_flux/Figures", device="svg", height=5, width=5, units="in")
}
myggsave_m <- function(x){
ggsave(plot=x, filename=paste0(deparse(substitute(x)), ".svg"), path="C:/Users/hanon/Documents/Github/aa_flux/Figures", device="svg", height=5, width=7, units="in")
}
myggsave_gr <- function(x){
ggsave(plot=x, filename=paste0(deparse(substitute(x)), ".svg"), path="C:/Users/hanon/Documents/Github/aa_flux/Figures", device="svg", height=5, width=8.09, units="in")
}
myggsave_sm <- function(x){
ggsave(plot=x, filename=paste0(deparse(substitute(x)), ".svg"), path="C:/Users/hanon/Documents/Github/aa_flux/Figures", device="svg", height=3, width=4.04, units="in")
}
myggsave_m(FigS2)
library("ggplot2")
library("dplyr")
library("ade4")
library("ggplot2")
library("ggpubr")
library("lmodel2")
library("ggplot2")
#Set your working directory
setwd("C:/Users/hanon/Documents/Github/aa_flux/Flux/")
#read in NS values
DD <- read.delim(file = "NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
fitII <- lmodel2(ns_rodent ~ ns_primate, data=DD, range.y="interval", range.x="interval", nperm=99)
reg <- fitII$regression.results
slope <- subset(reg, Method=="MA")$Slope
intercept <- subset(reg, Method=="MA")$Intercept
#calculate SPECIES COMPONENT: residuals between fluxes in P-R space and the model II regression
residuals_from_model_2 <- function(x,y,m,b){
result<-((b + m*x - y))/sqrt(m**2+1)
print(result*-1)
}
#calculate SHARED COMPONENT: projection of fluxes in P-R space along the model II regression
projections_from_model_2 <- function(x,y,m,b){
result<-sqrt(((x+m*y -m*b)/(m*m+1))**2+((m)*(x+m*y -m*b)/(m*m+1)+b)**2)
print(result)
}
DD$ns_residuals_m2<-residuals_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD$ns_projections_m2<- projections_from_model_2(DD$ns_primate, DD$ns_rodent, slope, intercept)
DD
#Check that calculations were correct
Dang<-ggplot(DD, aes(x=ns_projections_m2, y=ns_residuals_m2))+
labs( x = "Shared Freq", y = "Species Freq")+
geom_text(aes(label=aa),hjust=-0.1, vjust=0, color="blue", size = 6)+
geom_point(size=3)+theme(axis.title=element_text(size=24, face ="bold"),title=element_text(size=24, face ="bold"),axis.text=element_text(size=24),panel.background = element_rect(fill = "white", colour = "grey50"),panel.grid.major = element_line(colour = "grey90"),panel.grid.minor = element_line(colour = "grey90"))
Dang
#ellipse_error <- function(a,b,theta){
#  result <- (a*b)/sqrt((b*cos(theta))^2 + (a*sin(theta))^2)
#  print(result)
#}
#radslope <- (subset(reg, Method=="MA")$Angle)*(pi/180)
#radnormal <- radslope+(0.5*pi)
#DD$residual_error <- ellipse_error(DD$Perror, DD$Rerror, radnormal)
#DD$projection_error <- ellipse_error(DD$Perror, DD$Rerror, radslope)
#Dang_err <- Dang + geom_errorbar(DD, mapping = aes(ymin=residuals_m2-residual_error, ymax=residuals_m2+residual_error)) + geom_errorbarh(DD, mapping = aes(xmin=projections_m2-projection_error, xmax=projections_m2+projection_error))
#Dang_err
write.csv(DD[,c(1,6)], file="NS_shared.csv", quote=FALSE, row.names=FALSE)
write.csv(DD[,c(1,5)], file="NS_species.csv", quote=FALSE, row.names=FALSE)
write.csv(DD, file="all_NS.csv", quote=FALSE, row.names=FALSE)
library("ggplot2")
knitr::opts_chunk$set(eval=T, warning=F, error=F, message=F)
library("dplyr")
library("ggplot2")
library("ggtext")
library("lmodel2")
library("wCorr")
library("gridExtra")
library("magrittr")
library("svglite")
library("compositions")
#Set your working directory
setwd("C:/Users/hanon/Documents/GitHub/aa_flux/Figures/")
#read in amino acid metrics
metrics <- read.delim(file = "Short_amino_acid_properties_Oct23.csv", header=TRUE, stringsAsFactors=FALSE, sep=",") #%>% rename(yps="SlopeAnimal..1496", ops="SlopeAnimal..2101")
metrics
#calculate residuals of fitness effects after accounting for mol volume and disorder propensity
model_resid_LKmarch22 <- lm(metrics$mean_LKmarch22~metrics$Disorder_Propensity + metrics$VolumeA3, weights=(y=(1/(metrics$stderr_LKmarch22))^(2)))
resid_LKmarch22 <- model_resid_LKmarch22$residuals
metrics2 <- cbind(metrics, resid_LKmarch22)
#read in flux data
d <- read.delim(file = "../Flux/all_fluxes.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
ns <- read.delim(file = "../Flux/all_NS.csv", header=TRUE, stringsAsFactors=FALSE, sep=",")
dd <- cbind(d, metrics2[,2:118]) %>% mutate(fc_rodent = ns_rodent-ns_root, fc_primate = ns_primate-ns_root)
dm <- cbind(dd, ns[,5:6])
names(dm)
#settings that affect all or most Figs
#theme
mytheme <- theme(axis.title=element_text(size=16, face="bold"), axis.text=element_text(size=14), panel.background = element_rect(fill = "white", colour = "grey50"), panel.grid.major = element_line(colour = "grey90"), panel.grid.minor = element_blank(), panel.border = element_rect(color = "grey50", fill=NA), plot.margin = unit(c(0.15, 0.3, 0.1, 0.1), "cm"))
#functions for positioning annotations dynamically with axis range
pos_scale <- 0.05
xpos_hi <- function(x){
xpos = max(x) - pos_scale*diff(range(x))
return(xpos)}
xpos_lo <- function(x){
xpos = min(x) + pos_scale*diff(range(x))
return(xpos)}
ypos_hi <- function(y){
ypos = max(y) - pos_scale*diff(range(y))
return(xpos)}
ypos_lo <- function(y){
ypos = min(y) + pos_scale*diff(range(y))
return(ypos)}
#pull relevant data
n2_flux <- dm[,c("residuals_m2", "residual_error")]
n2_cais_pfam <- dm[,c("kldCAISslope_Pfam","kldCAISslope_Pfam_Std.Error")]
n2_cais_proteome <- dm[,c("kldCAISslope_proteome","kldCAISslope_proteome_Std.Error")]
n2_cais_proteome <- dm[,c("kldCAISslope_Proteome","kldCAISslope_Proteome_Std.Error")]
#calculate error squared
n2_flux2 <- mutate(n2_flux, err_sq = residual_error^2)
n2_cais_pfam2 <- mutate(n2_cais_pfam, err_sq = kldCAISslope_Pfam_Std.Error^2)
n2_cais_proteome2 <- mutate(n2_cais_proteome, err_sq = kldCAISslope_Proteome_Std.Error^2)
#sum of squared errors
sum(n2_flux2$err_sq) #0.00692863
sum(n2_cais_pfam2$err_sq) #0.005521011
sum(n2_cais_proteome2$err_sq) #0.008303926
#calculate variance - this formula already divides by n-1
var(n2_flux2$residuals_m2) #0.005102469
var(n2_cais_pfam2$CAISslopeNEWPfam_Estimates) #0.005715256
var(n2_cais_pfam2$kldCAISslope_Pfam) #0.005715256
var(n2_cais_proteome2$kldCAISslope_Proteome) #0.00956521
s2n2_flux <- var(n2_flux2$residuals_m2)/(sum(n2_flux2$err_sq)/20) #14.72865
s2n2_flux <- var(n2_flux2$residuals_m2)/(sum(n2_flux2$err_sq)/20) #14.72865
s2n2_cais_pfam <- var(n2_cais_pfam2$kldCAISslope_Pfam)/(sum(n2_cais_pfam2$err_sq)/20) #20.70366
s2n2_cais_proteome <- var(n2_cais_proteome2$kldCAISslope_Proteome)/(sum(n2_cais_proteome2$err_sq)/20) #23.0378
s2n2_flux
s2n2_cais_pfam
s2n2_cais_proteome
s2n2_cais_proteome/s2n2_cais_pfam #1.112741
s2n2_cais_proteome/s2n2_flux #=1.564149
